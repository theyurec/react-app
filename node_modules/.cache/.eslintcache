[{"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\reportWebVitals.js":"2","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\App.jsx":"3","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\Header\\Header.jsx":"4","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\PostList\\PostList.jsx":"5","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\configs\\navMenu.js":"6","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\Modal\\Modal.jsx":"7","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\MenuBurger\\MenuBurger.jsx":"8"},{"size":513,"mtime":1684299156365,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1684175343991,"results":"11","hashOfConfig":"10"},{"size":695,"mtime":1684687475289,"results":"12","hashOfConfig":"10"},{"size":3349,"mtime":1684687956211,"results":"13","hashOfConfig":"10"},{"size":1935,"mtime":1684690518447,"results":"14","hashOfConfig":"10"},{"size":865,"mtime":1684651404719,"results":"15","hashOfConfig":"10"},{"size":667,"mtime":1684691557219,"results":"16","hashOfConfig":"10"},{"size":1208,"mtime":1684651528723,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"14fgux7",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"21"},"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\index.js",[],[],[],"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\reportWebVitals.js",[],[],"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\App.jsx",[],[],"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\Header\\Header.jsx",["46","47","48","49"],[],"import './style.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport logo from './../../images/logo.png';\r\nimport searchIcon from './../../images/search.png';\r\nimport arrow_bottom from './../../images/arrow_bottom.svg';\r\nimport arrow_right from './../../images/arrow_right.svg';\r\nimport { navMenu } from '../../configs/navMenu.js';\r\n\r\nimport MenuBurger from '../MenuBurger/MenuBurger';\r\n\r\nconst Header = ({search, setSearch}) => {\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  const [searchInput, setSearchInput] = useState(false); \r\n\r\n\r\n\r\n  const [scrollPosition, setScrollPosition] = useState(0);\r\n  const [isMenuHidden, setIsMenuHidden] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const currentPosition = window.pageYOffset;\r\n      setScrollPosition(currentPosition);\r\n\r\n\r\n      if (currentPosition > 200) {\r\n        setIsMenuHidden(true);\r\n      } else {\r\n        setIsMenuHidden(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n\r\n  return ( \r\n    <>\r\n      <header className='header'>\r\n          <div className=\"container\">\r\n            <div className='header__top'>\r\n              <div className=\"logo-container\">\r\n                <img src={logo} alt=\"logo\" className=\"logo\" />\r\n              </div>\r\n              <div className=\"search\">\r\n              {searchInput &&\r\n                <input value={search} onChange={e => setSearch(e.target.value)} type=\"text\" placeholder=\"Search...\" />\r\n              }\r\n              <img src={searchIcon} alt=\"search_icon\" className=\"search__img\" onClick={() => setSearchInput(!searchInput)} />\r\n              </div>\r\n            </div>\r\n            <div className={menuActive ? 'burger-btn active' : 'burger-btn'} onClick={() => setMenuActive(!menuActive)}>\r\n              <span/>\r\n            </div>\r\n  \r\n            \r\n          </div>\r\n          \r\n  \r\n          <MenuBurger active={menuActive} setActive={setMenuActive}/>\r\n          \r\n        </header>\r\n  \r\n  <nav className={`nav ${isMenuHidden ? 'hide-menu' : 'show-menu'}`}>\r\n  <div className='container'>\r\n    <ul className=\"nav-list\">\r\n      {navMenu.map((obj, index) => (\r\n        <li className=\"nav-list__item\" key={index}>\r\n          <a href=\"#\" className=\"nav-list__link\">{obj.name}</a>\r\n          <img src={arrow_bottom} alt=\"arrow\" className=\"nav-list__arrow\" />\r\n            <ul className=\"nav-list__subItem\">\r\n              <div className='nav-list__subItem-wrapper'>\r\n                <div className='nav-list__subItem-wrapper2'>\r\n                  {obj.submenu.map((item, subIndex) => \r\n                  <div className='nav__submenu'>\r\n                      <li className='nav__submenu-wrapper' key={subIndex}>\r\n                          <a href=\"#\" className=\"nav__submenu-link\">{item}</a>\r\n                          <img src={arrow_right} alt=\"arrow\" className=\"nav-list__arrow\" />\r\n                      </li>\r\n                      <div className=\"nav__submenu-line\"></div>\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </ul>\r\n        </li>\r\n      )\r\n      )}\r\n      <a href='#'>Buy Now</a>\r\n    </ul>\r\n  </div>\r\n  \r\n  </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\PostList\\PostList.jsx",["50"],[],"import React from \"react\";\r\nimport './../../styles/main.css'\r\nimport './../PostList/index.css'\r\nimport Modal from \"../Modal/Modal\";\r\nimport { useState } from \"react\";\r\nimport { ResponsiveImage } from 'react-responsive-image';\r\n\r\n\r\nconst PostList = ({ posts, search }) => {\r\n  const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n  const handlePostClick = (post) => {\r\n    setSelectedPost(post);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setSelectedPost(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"post-list\">\r\n        {posts\r\n          .filter(\r\n            (obj) =>\r\n              obj.title.toLowerCase().includes(search.toLowerCase()) ||\r\n              obj.text.toLowerCase().includes(search.toLowerCase())\r\n          )\r\n          .map((post) => (\r\n            <div className=\"post\" key={post.id} onClick={() => handlePostClick(post)}>\r\n              {/* <ResponsiveImage\r\n                className=\"post__img\"\r\n                alt=\"img\"\r\n                src={post.img}\r\n                srcSet={{\r\n                '1x': post.img,\r\n                '2x': post.img_2x,\r\n                }}\r\n              /> */}\r\n              <img className=\"post__img\" src={post.img} alt=\"post\" />\r\n              <div className=\"post__main\">\r\n                <div className=\"post__tag\">{post.tags}</div>\r\n                <h2 className=\"post__title\">{post.title}</h2>\r\n                <div className=\"post__info\">\r\n                  <div className=\"post__autor\">{post.autor}</div>\r\n                  <div className=\"post__date\">{post.date}</div>\r\n                  <div className=\"post__views\">{post.views}</div>\r\n                </div>\r\n                <p className=\"post__text\">{post.text}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      {selectedPost && <Modal post={selectedPost} onCloseModal={handleCloseModal} />}\r\n    </div>\r\n  );\r\n};\r\nexport default PostList;","C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\configs\\navMenu.js",[],[],"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\Modal\\Modal.jsx",[],[],"C:\\Users\\admin\\Desktop\\front-end\\react3\\src\\components\\MenuBurger\\MenuBurger.jsx",["51","52"],[],"import React from \"react\";\r\nimport { navMenu } from \"../../configs/navMenu\";\r\nimport arrow_bottom from '../../images/arrow_bottom.svg'\r\nimport './index.css'\r\nimport logo from './../../images/logo.png'\r\n\r\nconst MenuBurger = ({ active, setActive }) => {\r\n  return (\r\n    <div className={active ? 'menu active' : 'menu'} onClick={() => setActive(false)}>\r\n      <div className=\"blur\"></div>\r\n      <div className=\"menu__content\" onClick={(e) => e.stopPropagation()}>\r\n        <img className=\"menu__logo\" src={logo} alt=\"logo\" />\r\n        <div className=\"logo-line\"></div>\r\n        <ul className=\"burger-list\">\r\n          {navMenu.map((obj, index) => (\r\n            <React.Fragment key={index}>\r\n              <li className=\"burger-list__item\">\r\n                <a href=\"#\" className=\"burger-list__link\">\r\n                  {obj.name}\r\n                </a>\r\n                <img src={arrow_bottom} alt=\"arrow\" className=\"burger-list__arrow\" />\r\n              </li>\r\n              <div className=\"logo-line\"></div>\r\n              \r\n\r\n            </React.Fragment>\r\n          ))}\r\n        </ul>\r\n        <a href='#' className=\"menu-btn\">Buy Now</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBurger;",{"ruleId":"53","severity":1,"message":"54","line":17,"column":10,"nodeType":"55","messageId":"56","endLine":17,"endColumn":24},{"ruleId":"57","severity":1,"message":"58","line":73,"column":11,"nodeType":"59","endLine":73,"endColumn":50},{"ruleId":"57","severity":1,"message":"58","line":81,"column":27,"nodeType":"59","endLine":81,"endColumn":69},{"ruleId":"57","severity":1,"message":"58","line":93,"column":7,"nodeType":"59","endLine":93,"endColumn":19},{"ruleId":"53","severity":1,"message":"60","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":18,"column":17,"nodeType":"59","endLine":18,"endColumn":59},{"ruleId":"57","severity":1,"message":"58","line":29,"column":9,"nodeType":"59","endLine":29,"endColumn":42},"no-unused-vars","'scrollPosition' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ResponsiveImage' is defined but never used."]